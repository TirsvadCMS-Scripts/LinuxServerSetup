rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        notify_method get;
        # Multible livestram with each filename ex. ch01 ch02 ect.
        application live {
            live on;
            #interleave on;
            hls on;
            hls_path /srv/www/default/hls/live;
            hls_fragment 15s;
            hls_continuous on;
            #hls_nested on:
            record all;
            record_path /srv/www/default/rec;
            record_unique on;
            record_max_size 10000000K;
        }
        # Push to a facebook live video
        application live2 {
            live on;
            #interleave on;
            hls on;
            hls_path /srv/www/default/hls/live2;
            hls_fragment 15s;
            hls_continuous on;
            #hls_nested on:
            #facebook live stream with tunnel for SSL
            #push rtmp://127.0.0.1:1936/rtmp/<streaming key>;
            record all;
            record_path /srv/www/default/rec;
            record_unique on;
            record_max_size 10000000K;
        }
        application sk {
            live on;

            # No RTMP playback
            deny play all;

            # Push this stream to the local HLS packaging application
            push rtmp://127.0.0.1:1935/hls-live;

            # HTTP callback when a stream starts publishing
            # Should return 2xx to allow, 3xx to redirect, anything else to deny.
            on_publish http://127.0.0.1:8080/on_publish;

            # Called when a stream stops publishing.  Response is ignored.
            on_publish_done http://127.0.0.1:8080/on_publish_done;
        }
        
        application hls-live {
            live on;

            # No RTMP playback
            deny play all;

            # Only allow publishing from localhost
            allow publish 127.0.0.1;
            deny publish all;

            # Package this stream as HLS
            hls on;
            hls_path /var/www/live;

            # Put streams in their own subdirectory under `hls_path`
            hls_nested on;
            hls_fragment_naming system;
        }
    }
}